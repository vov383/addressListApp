<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EASkV4aWYAAE1NACoAAAAIAAMBGgAF
        AAAAAQAAADIBGwAFAAAAAQAAADoBKAADAAAAAQACAAAAAAAAAEgAAAABAAAASAAAAAEAAP/bAEMAAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMD
        A//bAEMBAQEBAQEBAgEBAgICAQICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDA//AABEIABkAlgMBEQACEQEDEQH/xAAfAAAABgIDAQAAAAAAAAAAAAAHCAYFBAkDCgIB
        AAv/xAC1EAACAQMEAQMDAgMDAwIGCXUBAgMEEQUSBiEHEyIACDEUQTIjFQlRQhZhJDMXUnGBGGKRJUOh
        sfAmNHIKGcHRNSfhUzaC8ZKiRFRzRUY3R2MoVVZXGrLC0uLyZIN0k4Rlo7PD0+MpOGbzdSo5OkhJSlhZ
        WmdoaWp2d3h5eoWGh4iJipSVlpeYmZqkpaanqKmqtLW2t7i5usTFxsfIycrU1dbX2Nna5OXm5+jp6vT1
        9vf4+fr/xAAfAQAABgMBAQEAAAAAAAAAAAAGBQQDBwIIAQkACgv/xAC1EQACAQMCBAQDBQQEBAYGBW0B
        AgMRBCESBTEGACITQVEHMmEUcQhCgSORFVKhYhYzCbEkwdFDcvAX4YI0JZJTGGNE8aKyJjUZVDZFZCcK
        c4OTRnTC0uLyVWV1VjeEhaOzw9Pj8ykalKS0xNTk9JWltcXV5fUoR1dmOHaGlqa2xtbm9md3h5ent8fX
        5/dIWGh4iJiouMjY6Pg5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6vr/2gAMAwEAAhEDEQA/ANTz3Tqn
        XvfuvdXFbh+Efx6xnwjpO7oN010e8JevsLvGPeUudDYWs3FkkpHqNqfwRQ9KYkyM0mOWKJfv0qE9RZ1a
        I4dbb74e4d377Scgy2cX7kW/ltzAIm8VYU1abnxa17kCzVI8IxtQUBD9Zz7t7Be1Fn93eP3ChvZv6yNt
        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
        fumeve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697
        917r3v3Xuve/de697917r3v3Xuve/de697917r//2Q==
</value>
  </data>
</root>